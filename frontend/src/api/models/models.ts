/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Current User Endpoint */
        get: operations["get_current_user_endpoint_users_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{user_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get User Endpoint */
        get: operations["get_user_endpoint_users__user_id__get"];
        put?: never;
        post?: never;
        /** Delete User Endpoint */
        delete: operations["delete_user_endpoint_users__user_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Signup */
        post: operations["signup_auth_signup_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login */
        post: operations["login_auth_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Refresh Token */
        post: operations["refresh_token_auth_refresh_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Logout */
        post: operations["logout_auth_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Stances Endpoint */
        get: operations["get_stances_endpoint_stances_get"];
        put?: never;
        /** Create Stance Endpoint */
        post: operations["create_stance_endpoint_stances_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stances/{stance_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Stance Endpoint */
        get: operations["get_stance_endpoint_stances__stance_id__get"];
        /** Update Stance Endpoint */
        put: operations["update_stance_endpoint_stances__stance_id__put"];
        post?: never;
        /** Delete Stance Endpoint */
        delete: operations["delete_stance_endpoint_stances__stance_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stances/issue/{issue_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Stances By Issue Endpoint */
        get: operations["get_stances_by_issue_endpoint_stances_issue__issue_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stances/event/{event_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Stances By Event Endpoint */
        get: operations["get_stances_by_event_endpoint_stances_event__event_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stances/{stance_id}/comments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Comments By Stance Endpoint */
        get: operations["get_comments_by_stance_endpoint_stances__stance_id__comments_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{user_id}/demographics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Demographic Endpoint */
        get: operations["get_demographic_endpoint_users__user_id__demographics_get"];
        /** Update Demographic Endpoint */
        put: operations["update_demographic_endpoint_users__user_id__demographics_put"];
        /** Create Demographic Endpoint */
        post: operations["create_demographic_endpoint_users__user_id__demographics_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{user_id}/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Profile Endpoint */
        get: operations["get_profile_endpoint_users__user_id__profile_get"];
        /** Update Profile Endpoint */
        put: operations["update_profile_endpoint_users__user_id__profile_put"];
        /** Create Profile Endpoint */
        post: operations["create_profile_endpoint_users__user_id__profile_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/comments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Comment Endpoint */
        post: operations["create_comment_endpoint_comments_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/comments/{comment_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Comment Endpoint */
        get: operations["get_comment_endpoint_comments__comment_id__get"];
        /** Update Comment Endpoint */
        put: operations["update_comment_endpoint_comments__comment_id__put"];
        post?: never;
        /** Delete Comment Endpoint */
        delete: operations["delete_comment_endpoint_comments__comment_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/comments/{comment_id}/replies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Comment Replies Endpoint */
        get: operations["get_comment_replies_endpoint_comments__comment_id__replies_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Events Endpoint */
        get: operations["get_all_events_endpoint_events_get"];
        put?: never;
        /** Create Event Endpoint */
        post: operations["create_event_endpoint_events_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/events/{event_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Event Endpoint */
        get: operations["get_event_endpoint_events__event_id__get"];
        /** Update Event Endpoint */
        put: operations["update_event_endpoint_events__event_id__put"];
        post?: never;
        /** Delete Event Endpoint */
        delete: operations["delete_event_endpoint_events__event_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/events/{event_id}/stances/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get My Stance For Event */
        get: operations["get_my_stance_for_event_events__event_id__stances_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/issues": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Issues Endpoint */
        get: operations["get_all_issues_endpoint_issues_get"];
        put?: never;
        /** Create Issue Endpoint */
        post: operations["create_issue_endpoint_issues_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/issues/{issue_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Issue Endpoint */
        get: operations["get_issue_endpoint_issues__issue_id__get"];
        /** Update Issue Endpoint */
        put: operations["update_issue_endpoint_issues__issue_id__put"];
        post?: never;
        /** Delete Issue Endpoint */
        delete: operations["delete_issue_endpoint_issues__issue_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/issues/{issue_id}/stances/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get My Stance For Issue */
        get: operations["get_my_stance_for_issue_issues__issue_id__stances_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/comment-reactions/{comment_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** React To Comment */
        post: operations["react_to_comment_comment_reactions__comment_id__post"];
        /** Remove Comment Reaction */
        delete: operations["remove_comment_reaction_comment_reactions__comment_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/images": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Image Endpoint */
        post: operations["create_image_endpoint_images_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CommentCreateRequest */
        CommentCreateRequest: {
            /** Stance Id */
            stance_id: number;
            /** Content */
            content: string;
            /** Parent Id */
            parent_id?: number | null;
        };
        /** CommentDeleteResponse */
        CommentDeleteResponse: {
            /** Success */
            success: boolean;
        };
        /** CommentListResponse */
        CommentListResponse: {
            /** Comments */
            comments: components["schemas"]["CommentReadResponse"][];
        };
        /** CommentReactionCreateRequest */
        CommentReactionCreateRequest: {
            /** Is Like */
            is_like: boolean;
        };
        /** CommentReactionReadResponse */
        CommentReactionReadResponse: {
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /** Comment Id */
            comment_id: number;
            /** Is Like */
            is_like: boolean;
        };
        /** CommentReadResponse */
        CommentReadResponse: {
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /** Stance Id */
            stance_id: number;
            /** Content */
            content: string;
            /** Parent Id */
            parent_id?: number | null;
            /** Is Active */
            is_active: boolean;
            /** Likes */
            likes: number;
            /** Dislikes */
            dislikes: number;
            /** User Reaction */
            user_reaction: string | null;
            /** Count Nested */
            count_nested: number;
            /** Created At */
            created_at: string;
            /** Updated At */
            updated_at: string | null;
        };
        /** CommentUpdateRequest */
        CommentUpdateRequest: {
            /** Content */
            content?: string | null;
            /** Is Active */
            is_active?: boolean | null;
        };
        /** CommentUpdateResponse */
        CommentUpdateResponse: {
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /** Stance Id */
            stance_id: number;
            /** Content */
            content: string;
            /** Parent Id */
            parent_id?: number | null;
            /** Is Active */
            is_active: boolean;
            /** Created At */
            created_at: string;
            /** Updated At */
            updated_at: string | null;
        };
        /** DemographicCreateRequest */
        DemographicCreateRequest: {
            /** Birth Year */
            birth_year: number | null;
            /** Gender */
            gender: string | null;
            /** Zip Code */
            zip_code: string | null;
        };
        /** DemographicReadResponse */
        DemographicReadResponse: {
            /** User Id */
            user_id: number;
            /** Birth Year */
            birth_year: number | null;
            /** Gender */
            gender: string | null;
            /** Zip Code */
            zip_code: string | null;
        };
        /** DemographicUpdateRequest */
        DemographicUpdateRequest: {
            /** Birth Year */
            birth_year: number | null;
            /** Gender */
            gender: string | null;
            /** Zip Code */
            zip_code: string | null;
        };
        /** DemographicUpdateResponse */
        DemographicUpdateResponse: {
            /** User Id */
            user_id: number;
            /** Birth Year */
            birth_year: number | null;
            /** Gender */
            gender: string | null;
            /** Zip Code */
            zip_code: string | null;
        };
        /** EventCreateRequest */
        EventCreateRequest: {
            /** Title */
            title: string;
            /** Description */
            description?: string | null;
            /** Start Time */
            start_time?: string | null;
            /** End Time */
            end_time?: string | null;
        };
        /** EventDeleteResponse */
        EventDeleteResponse: {
            /** Success */
            success: boolean;
        };
        /** EventListResponse */
        EventListResponse: {
            /** Events */
            events: components["schemas"]["EventReadResponse"][];
        };
        /** EventReadResponse */
        EventReadResponse: {
            /** Id */
            id: number;
            /** Title */
            title: string;
            /** Description */
            description?: string | null;
            /** Start Time */
            start_time?: string | null;
            /** End Time */
            end_time?: string | null;
        };
        /** EventUpdateRequest */
        EventUpdateRequest: {
            /** Title */
            title?: string | null;
            /** Description */
            description?: string | null;
            /** Start Time */
            start_time?: string | null;
            /** End Time */
            end_time?: string | null;
        };
        /** EventUpdateResponse */
        EventUpdateResponse: {
            /** Id */
            id: number;
            /** Title */
            title: string;
            /** Description */
            description?: string | null;
            /** Start Time */
            start_time?: string | null;
            /** End Time */
            end_time?: string | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** ImageCreateRequest */
        ImageCreateRequest: {
            /** Stance Id */
            stance_id?: number | null;
            /** Issue Id */
            issue_id?: number | null;
            /** Event Id */
            event_id?: number | null;
            /** Mime Type */
            mime_type: string;
            /**
             * Image Content
             * Format: binary
             */
            image_content: string;
        };
        /** ImageCreateResponse */
        ImageCreateResponse: {
            /** Public Url */
            public_url: string;
        };
        /** IssueCreateRequest */
        IssueCreateRequest: {
            /** Title */
            title: string;
            /** Description */
            description: string | null;
        };
        /** IssueDeleteResponse */
        IssueDeleteResponse: {
            /** Success */
            success: boolean;
        };
        /** IssueListResponse */
        IssueListResponse: {
            /** Issues */
            issues: components["schemas"]["IssueReadResponse"][];
        };
        /** IssueReadResponse */
        IssueReadResponse: {
            /** Id */
            id: number;
            /** Title */
            title: string;
            /** Description */
            description: string | null;
        };
        /** IssueUpdateRequest */
        IssueUpdateRequest: {
            /** Title */
            title: string | null;
            /** Description */
            description: string | null;
        };
        /** IssueUpdateResponse */
        IssueUpdateResponse: {
            /** Id */
            id: number;
            /** Title */
            title: string;
            /** Description */
            description: string | null;
        };
        /** LoginRequest */
        LoginRequest: {
            /** Username */
            username: string;
            /** Password */
            password: string;
        };
        /** LogoutRequest */
        LogoutRequest: {
            /** Refresh Token */
            refresh_token: string;
        };
        /** LogoutResponse */
        LogoutResponse: {
            /** Success */
            success: boolean;
        };
        /** ProfileCreateRequest */
        ProfileCreateRequest: {
            /** Bio */
            bio: string | null;
            /** Avatar Url */
            avatar_url: string | null;
            /** Pinned Stance Id */
            pinned_stance_id: number | null;
        };
        /** ProfileReadResponse */
        ProfileReadResponse: {
            /** User Id */
            user_id: number;
            /** Bio */
            bio: string | null;
            /** Avatar Url */
            avatar_url: string | null;
            /** Pinned Stance Id */
            pinned_stance_id: number | null;
        };
        /** ProfileUpdateRequest */
        ProfileUpdateRequest: {
            /** Bio */
            bio: string | null;
            /** Avatar Url */
            avatar_url: string | null;
            /** Pinned Stance Id */
            pinned_stance_id: number | null;
        };
        /** ProfileUpdateResponse */
        ProfileUpdateResponse: {
            /** User Id */
            user_id: number;
            /** Bio */
            bio: string | null;
            /** Avatar Url */
            avatar_url: string | null;
            /** Pinned Stance Id */
            pinned_stance_id: number | null;
        };
        /** RefreshRequest */
        RefreshRequest: {
            /** Refresh Token */
            refresh_token: string;
        };
        /** RefreshResponse */
        RefreshResponse: {
            /** Access Token */
            access_token: string;
            /** Refresh Token */
            refresh_token: string;
        };
        /** SignupRequest */
        SignupRequest: {
            /** Username */
            username: string;
            /** Full Name */
            full_name?: string | null;
            /** Email */
            email: string;
            /** Password */
            password: string;
        };
        /** SignupResponse */
        SignupResponse: {
            /** Id */
            id: number;
            /** Username */
            username: string;
            /** Email */
            email: string;
        };
        /** StanceCreateRequest */
        StanceCreateRequest: {
            /** Event Id */
            event_id?: number | null;
            /** Issue Id */
            issue_id?: number | null;
            /** Headline */
            headline: string;
            /** Content Json */
            content_json: string;
        };
        /** StanceCreateResponse */
        StanceCreateResponse: {
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /** Event Id */
            event_id?: number | null;
            /** Issue Id */
            issue_id?: number | null;
            /** Headline */
            headline: string;
            /** Content Json */
            content_json: string;
        };
        /** StanceDeleteResponse */
        StanceDeleteResponse: {
            /** Success */
            success: boolean;
        };
        /** StanceListResponse */
        StanceListResponse: {
            /** Stances */
            stances: components["schemas"]["StanceReadResponse"][];
        };
        /** StanceReadResponse */
        StanceReadResponse: {
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /** Event Id */
            event_id?: number | null;
            /** Issue Id */
            issue_id?: number | null;
            /** Headline */
            headline: string;
            /** Content Json */
            content_json: string;
        };
        /** StanceUpdateRequest */
        StanceUpdateRequest: {
            /** Headline */
            headline?: string | null;
            /** Content Json */
            content_json?: string | null;
        };
        /** StanceUpdateResponse */
        StanceUpdateResponse: {
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /** Event Id */
            event_id?: number | null;
            /** Issue Id */
            issue_id?: number | null;
            /** Headline */
            headline: string;
            /** Content Json */
            content_json: string;
        };
        /** TokenResponse */
        TokenResponse: {
            /** Access Token */
            access_token: string;
            /** Refresh Token */
            refresh_token: string;
        };
        /** UserDeleteResponse */
        UserDeleteResponse: {
            /** Success */
            success: boolean;
        };
        /** UserReadResponse */
        UserReadResponse: {
            /** Id */
            id: number;
            /** Username */
            username: string;
            /** Full Name */
            full_name?: string | null;
            /** Email */
            email: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_current_user_endpoint_users_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserReadResponse"];
                };
            };
        };
    };
    get_user_endpoint_users__user_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_user_endpoint_users__user_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserDeleteResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    signup_auth_signup_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SignupRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SignupResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    login_auth_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    refresh_token_auth_refresh_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RefreshRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RefreshResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    logout_auth_logout_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LogoutRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LogoutResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_stances_endpoint_stances_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StanceListResponse"];
                };
            };
        };
    };
    create_stance_endpoint_stances_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StanceCreateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StanceCreateResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_stance_endpoint_stances__stance_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                stance_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StanceReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_stance_endpoint_stances__stance_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                stance_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StanceUpdateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StanceUpdateResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_stance_endpoint_stances__stance_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                stance_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StanceDeleteResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_stances_by_issue_endpoint_stances_issue__issue_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StanceListResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_stances_by_event_endpoint_stances_event__event_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StanceListResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_comments_by_stance_endpoint_stances__stance_id__comments_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                stance_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommentListResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_demographic_endpoint_users__user_id__demographics_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DemographicReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_demographic_endpoint_users__user_id__demographics_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DemographicUpdateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DemographicUpdateResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_demographic_endpoint_users__user_id__demographics_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DemographicCreateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DemographicReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_profile_endpoint_users__user_id__profile_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProfileReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_profile_endpoint_users__user_id__profile_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProfileUpdateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProfileUpdateResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_profile_endpoint_users__user_id__profile_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProfileCreateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProfileReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_comment_endpoint_comments_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CommentCreateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommentReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_comment_endpoint_comments__comment_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                comment_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommentReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_comment_endpoint_comments__comment_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                comment_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CommentUpdateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommentUpdateResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_comment_endpoint_comments__comment_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                comment_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommentDeleteResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_comment_replies_endpoint_comments__comment_id__replies_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                comment_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommentListResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_events_endpoint_events_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventListResponse"];
                };
            };
        };
    };
    create_event_endpoint_events_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EventCreateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_event_endpoint_events__event_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_event_endpoint_events__event_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EventUpdateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventUpdateResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_event_endpoint_events__event_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventDeleteResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_my_stance_for_event_events__event_id__stances_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StanceReadResponse"] | null;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_issues_endpoint_issues_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueListResponse"];
                };
            };
        };
    };
    create_issue_endpoint_issues_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IssueCreateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_issue_endpoint_issues__issue_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_issue_endpoint_issues__issue_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IssueUpdateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueUpdateResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_issue_endpoint_issues__issue_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueDeleteResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_my_stance_for_issue_issues__issue_id__stances_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StanceReadResponse"] | null;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    react_to_comment_comment_reactions__comment_id__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                comment_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CommentReactionCreateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommentReactionReadResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    remove_comment_reaction_comment_reactions__comment_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                comment_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_image_endpoint_images_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ImageCreateRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ImageCreateResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
